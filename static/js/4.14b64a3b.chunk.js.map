{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","hoc/WithAuthRedirects.tsx","components/Dialogs/Dialogs.module.css","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","connect","props","restProps","to","module","exports","maxLength15","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","name","component","Textarea","type","validate","required","Dialogs","dialogs","dialogsPage","messages","className","s","dialogsItems","map","d","dialog","active","src","img","alt","m","message","id","data","sendNewMessage","newMessageBody","compose","getDialogsPage","dispatch","sendMessageAC"],"mappings":"qJACe,SAASA,EAAyBC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IACIE,EAAKC,EADLC,ECHS,SAAuCJ,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAKC,EAFLC,EAAS,GACTC,EAAaC,OAAOC,KAAKP,GAG7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCD,EAAMG,EAAWF,GACbF,EAASQ,QAAQP,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAGvB,OAAOE,EDTM,CAA6BJ,EAAQC,GAGlD,GAAIK,OAAOI,sBAAuB,CAChC,IAAIC,EAAmBL,OAAOI,sBAAsBV,GAEpD,IAAKG,EAAI,EAAGA,EAAIQ,EAAiBH,OAAQL,IACvCD,EAAMS,EAAiBR,GACnBF,EAASQ,QAAQP,IAAQ,GACxBI,OAAOM,UAAUC,qBAAqBC,KAAKd,EAAQE,KACxDE,EAAOF,GAAOF,EAAOE,IAIzB,OAAOE,E,4CEPHW,EAAkB,SAACC,GACrB,MAAO,CACHC,OAAQD,EAAME,KAAKD,SAIpB,SAASE,EAAoBC,GAOhC,OAAQC,YAAQN,EAARM,EANkB,SAACC,GACQA,EAAxBL,OAAP,IAAkBM,EAAlB,EAA+BD,EAA/B,GACA,OAAKA,EAAML,OACJ,cAACG,EAAD,eAAgBG,IADG,cAAC,IAAD,CAAUC,GAAI,e,oBClBhDC,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,uICM/MC,EAAcC,YAAiB,KAsC5B,IAaMC,EAAsBC,YAA2B,CAC1DC,KAAM,WADyBD,EAbL,SAACR,GAC3B,OACI,uBAAMU,SAAUV,EAAMW,aAAtB,UACI,cAACC,EAAA,EAAD,CAAOC,YAAa,qBACbC,KAAK,iBACLC,UAAWC,IACXC,KAAM,OACNC,SAAU,CAACC,IAAUd,KAC5B,gDAQGe,EApDR,SAAiBpB,GACpB,IAGIqB,EAAUrB,EAAMsB,YAAYD,QAC5BE,EAAWvB,EAAMsB,YAAYC,SACjC,OACI,sBAAKC,UAAWC,IAAEJ,QAAlB,UACI,qBAAKG,UAAWC,IAAEC,aAAlB,SAEQL,EAAQM,KAAI,SAAAC,GACR,OACI,sBAAKJ,UAAWC,IAAEI,OAAS,IAAMJ,IAAEK,OAAnC,UACKF,EAAEd,KACH,qBAAKiB,IAAKH,EAAEI,IAAKC,IAAK,mBAI1C,sBAAKT,UAAWC,IAAEF,SAAlB,UAEQA,EAASI,KAAI,SAAAO,GACT,OACI,qBACKV,UAAWC,IAAEI,OADlB,SAEKK,EAAEC,SAFGD,EAAEE,OAKxB,cAAC7B,EAAD,CAAqBG,SA1BT,SAAC2B,GACrBrC,EAAMsC,eAAeD,EAAKE,0B,iBCmBnBC,sBACXzC,aAboB,SAACL,GACrB,MAAO,CACH4B,YAAamB,YAAe/C,OAGT,SAACgD,GACxB,MAAO,CACHJ,eAAgB,SAACC,GACbG,EAASC,YAAcJ,SAM/B1C,IAFW2C,CAGbpB","file":"static/js/4.14b64a3b.chunk.js","sourcesContent":["import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React, {ComponentType} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {AppStateType} from '../redux/redux_store';\r\n\r\n\r\ntype mapStateToPropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n    const RedirectComponent = (props: mapStateToPropsType) => {\r\n        const {isAuth, ...restProps} = props\r\n        if (!props.isAuth) return <Redirect to={'login'}/>\r\n        return <Component  {...restProps as T}/>\r\n    }\r\n\r\n    return  connect(mapStateToProps)(RedirectComponent)\r\n\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1qI3Z\",\"dialog\":\"Dialogs_dialog__37WKc\",\"dialogsItems\":\"Dialogs_dialogsItems__1-Abt\",\"active\":\"Dialogs_active__1IQwU\",\"messages\":\"Dialogs_messages__1tOMp\",\"message\":\"Dialogs_message__1884l\"};","import React from 'react';\r\nimport s from \"./Dialogs.module.css\"\r\nimport {DialogsPropsType} from \"./DialogsContainer\";\r\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form';\r\nimport {Textarea} from \"../../assets/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nlet maxLength15 = maxLengthCreator(100)\r\n\r\nexport function Dialogs(props: DialogsPropsType) {\r\n    let addNewMessageBody = (data: FormMessageType) => {\r\n        props.sendNewMessage(data.newMessageBody)\r\n    }\r\n    let dialogs = props.dialogsPage.dialogs\r\n    let messages = props.dialogsPage.messages\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {\r\n                    dialogs.map(d => {\r\n                        return (\r\n                            <div className={s.dialog + \" \" + s.active}>\r\n                                {d.name}\r\n                                <img src={d.img} alt={'people'}/>\r\n                            </div>)\r\n                    })}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {\r\n                    messages.map(m => {\r\n                        return (\r\n                            <div key={m.id}\r\n                                 className={s.dialog}>\r\n                                {m.message}\r\n                            </div>)\r\n                    })}\r\n                <AddMessageReduxForm onSubmit={addNewMessageBody}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\ntype FormMessageType = {\r\n    newMessageBody: string\r\n}\r\nexport const AddMessageForm = (props: InjectedFormProps<FormMessageType>) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field placeholder={'Enter your message'}\r\n                   name='newMessageBody'\r\n                   component={Textarea}\r\n                   type={'text'}\r\n                   validate={[required, maxLength15,]}/>\r\n            <button>Send</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const AddMessageReduxForm = reduxForm<FormMessageType>({\r\n    form: 'dialogs'\r\n})(AddMessageForm)\r\nexport default Dialogs;\r\n\r\n","import React from 'react';\r\nimport {InitialStateType, sendMessageAC} from \"../../redux/dialogs-reducer\";\r\nimport {AppStateType} from \"../../redux/redux_store\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose, Dispatch} from \"redux\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { withAuthRedirect } from '../../hoc/WithAuthRedirects';\r\nimport {getDialogsPage} from '../../redux/select'\r\n\r\n\r\nexport type MapStatePropsType = {\r\n    dialogsPage: InitialStateType\r\n}\r\nexport type MapDispatchPropsType = {\r\n    sendNewMessage: (newMessageBody: string) => void\r\n}\r\nexport type DialogsPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {   // AppStateType это type всего нашего state!!! и возвращает частичку state из редьюсера\r\n    return {\r\n        dialogsPage: getDialogsPage(state),\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {   //dispatch импортируем из redux\r\n    return {\r\n        sendNewMessage: (newMessageBody: string) => {\r\n            dispatch(sendMessageAC(newMessageBody))\r\n        }\r\n    }\r\n}\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect,\r\n)(Dialogs)\r\n\r\n\r\n\r\n"],"sourceRoot":""}