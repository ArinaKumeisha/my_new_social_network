{"version":3,"sources":["redux/profile-reducer.ts","assets/image/avatar.png","redux/dialogs-reducer.ts","components/Navbar/Navbar.module.css","api/api.ts","assets/FormsControls.module.css","redux/select.tsx","components/Navbar/Navbar.tsx","components/Music/Music.tsx","components/Settings/Music.tsx","components/Header/Header.tsx","redux/auth-reducer.ts","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","redux/users-reducer.ts","locale/en_US.js","assets/common/Paginator.tsx","components/Users/EveryUser.tsx","components/Users/Users.tsx","components/Users/UsersContainer.tsx","components/New/new-reducer.tsx","components/New/New.tsx","redux/app-reducer.ts","hoc/WithSuspense.tsx","App.tsx","redux/redux_store.ts","index.tsx","components/Users/user.module.css","assets/image/prelo.webp","components/preloader/preloader.jsx","utils/validators/validators.tsx","assets/FormsControls.tsx","components/Header/Header.module.css","assets/common/common.module.css"],"names":["ACTION_TYPE","initialState","profile","status","newPostText","posts","id","message","likeCount","img","profileReducer","state","action","type","ADD_POST","newPost","Date","getTime","newMessagePost","DELETE_POST","filter","p","postId","SET_STATUS","SET_USER_PROFILE_SUCCESS","SAVE_PHOTO","photos","addPostAC","deletePostAC","setStatusAC","getUserStatus","userId","dispatch","a","profileAPI","getStatus","response","data","Error","savePhotoAC","setUserProfile","getUserProfile","updateStatus","resultCode","savePhoto","console","log","dialogs","name","messages","dialogsReducer","SEND_MESSAGE","nextMessage","newMessageBody","sendMessageAC","module","exports","instance","axios","create","baseURL","withCredentials","headers","usersAPI","getUsers","currentPage","pageSize","get","then","follow","post","unFollow","delete","authAPI","me","login","email","password","rememberMe","logOut","put","photoFile","formData","FormData","append","getDialogsPage","dialogsPage","getIsAuth","auth","isAuth","getLogin","getProfile","profilePage","getId","getPosts","usersPage","users","getPageSize","getTotalUsersCount","totalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","followingInProgress","createSelector","u","Navbar","className","s","nav","item","to","activeClassName","activeLink","Music","Settings","Header","props","header","src","alt","loginBlock","onClick","error","capchaUrl","succes","GET_USER_DATA_SUCCESS","payload","getAuthUserData","res","HeaderContainer","this","React","Component","connector","connect","maxLength12","maxLengthCreator","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","Field","component","Input","validate","required","placeholder","commonError","length","stopSubmit","_error","useSelector","followSucces","userID","FOLLOW_SUCCES","unFollowSuccess","UN_FOLLOW_SUCCESS","setCurrentPage","SET_CURRENT_PAGE","toggleIsFetching","TOGGLE_IS_FETCHING","toggleIsFollowingProgress","TOGGLE_IS_FOLLOWING_PROGRESS","followUnFollow","method","actionCreator","items_per_page","jump_to","jump_to_confirm","page","prev_page","next_page","prev_5","next_5","prev_3","next_3","Paginator","onPageHandler","showTitle","defaultCurrent","total","onChange","e","defaultPageSize","locale","localeInfo","EveryUser","user","common","photo","small","avatar","followAndDescription","left","followed","disabled","some","style","commonBtn","right","Users","map","UsersContainer","pageNumber","requestUsers","compose","bind","items","SET_USERS","totalCount","SET_TOTAL_USER_COUNT","count","messageForState","NewReduxForm","NewForm","useDispatch","selector","new","values","messageForm","inputform","inicialized","WithSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","inicializedApp","path","render","New","Login","app","INITIALIZED_SUCCESS","rootReducer","combineReducers","formReducer","newMessage","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleWare","version","ReactDOM","document","getElementById","Preloader","prelo","width","value","maxLength","input","meta","hasError","touched","container","formControl","Textarea"],"mappings":"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","file":"static/js/main.615396b8.chunk.js","sourcesContent":["import {Dispatch} from \"redux\";\r\nimport {profileAPI} from \"../api/api\";\r\nimport {PhotosType, PostsType, ProfilesType} from \"../types/types\";\r\n\r\nexport enum ACTION_TYPE {\r\n    ADD_POST = \"PROFILE/ADD-POST\",\r\n    SET_STATUS = \"PROFILE/SET_STATUS\",\r\n    DELETE_POST = \"PROFILE/DELETE-POST\",\r\n    SET_USER_PROFILE_SUCCESS = \"PROFILE/SET_USER_PROFILE_SUCCESS\",\r\n    SEND_MESSAGE = \"DIALOGS/SEND-MESSAGE\",\r\n    FOLLOW_SUCCES = \"USERS/FOLLOW_SUCCES\",\r\n    UN_FOLLOW_SUCCESS = \"USERS/UN_FOLLOW_SUCCESS\",\r\n    SET_USERS = \"USERS/SET_USERS\",\r\n    SET_CURRENT_PAGE = \"USERS/SET_CURRENT_PAGE\",\r\n    SET_TOTAL_USER_COUNT = \"USERS/SET-TOTAL_USER_COUNT\",\r\n    TOGGLE_IS_FETCHING = \"USERS/TOGGLE-IS-FETCHING\",\r\n    TOGGLE_IS_FOLLOWING_PROGRESS = \"USERS/TOGGLE-IS_FOLLOWING-PROGRESS\",\r\n    GET_USER_DATA_SUCCESS = \"AUTH/ACTION_TYPE.GET_USER_DATA_SUCCESS\",\r\n    INITIALIZED_SUCCESS = \"APP/INITIALIZED-SUCCESS\",\r\n    SAVE_PHOTO = \"PROFILE/SAVE-PHOTO\"\r\n}\r\n\r\n\r\nexport type ProfileActionType =\r\n    AddPostAT |\r\n    setUserProfileSuccessAT |\r\n    SetStatusAT |\r\n    DeletePostAT |\r\n    SavePhotoAT\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nlet initialState = {\r\n    profile: null as ProfilesType | null,\r\n    status: '',\r\n    newPostText: '',\r\n    posts: [\r\n        {\r\n            id: 2,\r\n            message: \"Hello, how are you?\",\r\n            likeCount: 15,\r\n            img: \"https://www.fotoprizer.ru/img_inf/st_221.jpg\"\r\n        },\r\n        {\r\n            id: 1,\r\n            message: \"It's my first post\",\r\n            likeCount: 18,\r\n            img: \"https://www.fotoprizer.ru/img_inf/st_221.jpg\"\r\n        },\r\n    ] as Array<PostsType>,\r\n}\r\nexport const profileReducer = (state: InitialStateType = initialState, action: ProfileActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case ACTION_TYPE.ADD_POST:\r\n            const newPost: PostsType = {\r\n                id: new Date().getTime(),\r\n                message: action.newMessagePost,\r\n                likeCount: 0,\r\n                img: \"https://www.fotoprizer.ru/img_inf/st_221.jpg\",\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [newPost, ...state.posts],\r\n            }\r\n        case ACTION_TYPE.DELETE_POST: {\r\n            return {...state, posts: state.posts.filter(p => p.id !== action.postId)}\r\n        }\r\n\r\n        case ACTION_TYPE.SET_STATUS:\r\n            return {\r\n                ...state, status: action.status\r\n            }\r\n        case ACTION_TYPE.SET_USER_PROFILE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case ACTION_TYPE.SAVE_PHOTO:\r\n            if (state.profile) {\r\n                return {...state, profile: {...state.profile, photos: action.photos}}\r\n            }\r\n            return {...state}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport type AddPostAT = {\r\n    type: ACTION_TYPE.ADD_POST,\r\n    newMessagePost: any\r\n}\r\nexport type setUserProfileSuccessAT = {\r\n    type: ACTION_TYPE.SET_USER_PROFILE_SUCCESS,\r\n    profile: ProfilesType | null\r\n}\r\nexport type SetStatusAT = {\r\n    type: ACTION_TYPE.SET_STATUS,\r\n    status: string,\r\n}\r\n\r\nexport const addPostAC = (newMessagePost: string): AddPostAT => {\r\n    return {\r\n        type: ACTION_TYPE.ADD_POST,\r\n        newMessagePost,\r\n    } as const\r\n}\r\nexport type DeletePostAT = ReturnType<typeof deletePostAC>\r\nexport const deletePostAC = (postId: number) => {\r\n    return {\r\n        type: ACTION_TYPE.DELETE_POST,\r\n        postId,\r\n    } as const\r\n}\r\n\r\nexport const setStatusAC = (status: string): SetStatusAT => {\r\n    return {\r\n        type: ACTION_TYPE.SET_STATUS,\r\n        status,\r\n    } as const\r\n}\r\nexport const setUserProfileSuccess = (profile: ProfilesType) => {\r\n    return {\r\n        type: ACTION_TYPE.SET_USER_PROFILE_SUCCESS,\r\n        profile,\r\n    } as const\r\n}\r\n\r\nexport const getUserStatus = (userId: string) => async (dispatch: Dispatch<ProfileActionType>) => {\r\n    try {\r\n        const response = await profileAPI.getStatus(userId)\r\n        dispatch(setStatusAC(response.data))\r\n    } catch (e) {\r\n        throw  Error\r\n    }\r\n}\r\nexport type SavePhotoAT = ReturnType<typeof savePhotoAC>\r\nexport const savePhotoAC = (photos: PhotosType) => {\r\n    return {\r\n        type: ACTION_TYPE.SAVE_PHOTO,\r\n        photos,\r\n    } as const\r\n}\r\nexport const setUserProfile = (userId: string) => async (dispatch: Dispatch<ProfileActionType>) => {\r\n    try {\r\n        const response = await profileAPI.getUserProfile(userId)\r\n        dispatch(setUserProfileSuccess(response.data))\r\n    } catch (e) {\r\n        throw  Error\r\n    }\r\n}\r\nexport const updateStatus = (status: string) => {\r\n    return async (dispatch: Dispatch<ProfileActionType>) => {\r\n        try {\r\n            const response = await profileAPI.updateStatus(status)\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setStatusAC(status))\r\n            }\r\n        } catch (error) {\r\n            throw  Error\r\n        }\r\n    }\r\n}\r\nexport const savePhoto = (photos: PhotosType) => {\r\n    return async (dispatch: Dispatch<ProfileActionType>) => {\r\n        try {\r\n            const response = await profileAPI.savePhoto(photos)\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(savePhotoAC(response.data.data.photos))\r\n            }\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/avatar.7bdf7b93.png\";","import { DialogsType, MessagesType } from \"../types/types\";\r\nimport {ACTION_TYPE} from \"./profile-reducer\";\r\n\r\n\r\nexport type InitialStateType = typeof initialState\r\nexport type DialogActionType = SendMessageAT\r\nlet initialState = {\r\n    dialogs: [\r\n        {\r\n            id: 1,\r\n            name: \"Marina\",\r\n            img: \"https://video-pricheski.ru/photo/img/foto-devushek-s-korotkoi-strizhkoi-dlia-avy-3.jpg\"\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Alina\",\r\n            img: \"https://bipbap.ru/wp-content/uploads/2017/05/370.jpg\"\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"Alex\",\r\n            img: \"https://prikolnye-kartinki.ru/img/picture/Aug/23/f0b9e5a7d4b40ce999e2ba9b4e4d1b39/2.jpg\"\r\n        },\r\n        {id: 4, name: \"Viktor\", img: \"https://87.img.avito.st/640x480/8817015087.jpg\"},\r\n        {\r\n            id: 6,\r\n            name: \"Anna\",\r\n            img: \"https://i.pinimg.com/originals/b2/95/45/b29545916fbf406f7cec10ff1845a191.jpg\"\r\n        },\r\n    ] as Array<DialogsType>,\r\n    messages: [\r\n        {id: 1, message: \"How are you?\"},\r\n        {id: 2, message: \"Hello\"},\r\n        {id: 3, message: \"Yo\"},\r\n    ] as Array<MessagesType>,\r\n}\r\n\r\n\r\nexport const dialogsReducer = (state = initialState, action: DialogActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case ACTION_TYPE.SEND_MESSAGE:\r\n            const nextMessage: MessagesType = {\r\n                id: new Date().getTime(),\r\n                message: action.newMessageBody\r\n            }\r\n\r\n            return {\r\n                ...state, messages: [nextMessage, ...state.messages],\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\ntype SendMessageAT = {\r\n    type: ACTION_TYPE.SEND_MESSAGE,\r\n    newMessageBody: string\r\n}\r\nexport const sendMessageAC = (newMessageBody: string): SendMessageAT => {\r\n    return (\r\n        {\r\n            type: ACTION_TYPE.SEND_MESSAGE,\r\n            newMessageBody,\r\n        }\r\n    ) as const\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3K0cN\",\"item\":\"Navbar_item__1jhJx\",\"activeLink\":\"Navbar_activeLink__3vpt0\",\"post\":\"Navbar_post___jI8L\",\"active\":\"Navbar_active__2IHiz\"};","import {PhotosType, ProfilesType, UserType} from \"../types/types\";\r\nimport axios, {AxiosResponse} from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"f499194a-9fc7-4a05-a45f-a1732e1abd57\"\r\n    }\r\n});\r\n\r\nexport type ResponseUserType<T={}> = {\r\n    items: T\r\n    totalCount: number\r\n    error: number\r\n}\r\n\r\nexport type CommonType<T={}> = {\r\n    resultCode: number\r\n    messages: string[],\r\n    data: T\r\n}\r\n\r\n\r\nexport type AuthMeType= {\r\n    id: string\r\n    email: string\r\n    login: string\r\n}\r\nexport const usersAPI = {\r\n    getUsers: (currentPage: number = 10, pageSize: number = 100) => {\r\n        return instance.get<ResponseUserType<UserType[]>>(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    follow(userId: string | number) {\r\n        return instance.post<CommonType>(`follow/` + userId, {}, {})\r\n\r\n    }, unFollow(userId: string | number) {\r\n        return instance.delete<CommonType>(`follow/` + userId, {})\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get<CommonType<AuthMeType>>(`auth/me`, {})\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean = false) {\r\n        return instance.post<CommonType<{userId: number}>>(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logOut() {\r\n        return instance.delete<CommonType>(`auth/login`,{})\r\n    }\r\n\r\n}\r\n\r\nexport const profileAPI = {\r\n    getUserProfile(userId: string) {\r\n        return instance.get<ProfilesType>(`profile/` + userId,\r\n        )\r\n    },\r\n    getStatus(userId: string) {\r\n        return instance.get<any>(`profile/status/` + userId,)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<CommonType>(`profile/status`, {status: status})\r\n    },\r\n    savePhoto(photoFile: any) {\r\n        let formData = new FormData();\r\n        formData.append('image', photoFile);\r\n       return instance.put<CommonType<{photos:PhotosType }>>(`profile/photo`,formData,  {\r\n           headers: {\r\n               'Content-Type': 'multipart/form-data'\r\n           }\r\n       })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FormsControls_container__dDYNt\",\"formControl\":\"FormsControls_formControl__10mJD\",\"error\":\"FormsControls_error__3qrXj\",\"comonError\":\"FormsControls_comonError__3xbB3\"};","import {AppStateType} from \"./redux_store\";\r\nimport {createSelector} from \"reselect\";\r\n\r\nexport const getDialogsPage = (state: AppStateType) => {\r\n    return state.dialogsPage\r\n}\r\n\r\nexport const getIsAuth = (state: AppStateType) => {\r\n    return state.auth.isAuth\r\n}\r\n\r\nexport const getLogin = (state: AppStateType) => {\r\n    return state.auth.login\r\n}\r\n\r\nexport const getProfile = (state: AppStateType) => {\r\n    return state.profilePage.profile\r\n}\r\nexport const getStatus = (state: AppStateType) => {\r\n    return state.profilePage.status\r\n}\r\nexport const getId = (state: AppStateType) => {\r\n    return state.auth.id\r\n}\r\nexport const getPosts = (state: AppStateType) => {\r\n    return state.profilePage.posts\r\n}\r\nexport const getUsers = (state: AppStateType) => {\r\n    return state.usersPage.users\r\n}\r\nexport const getPageSize = (state: AppStateType) => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state: AppStateType) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n\r\nexport const getUsersSuper = createSelector(\r\n    getUsers, (users) => {                                        // из библиотеки reselect!\r\n        return users.filter(u => true)\r\n    })","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from \"./Navbar.module.css\";\r\n\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n        </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/new\" activeClassName={s.activeLink}>New</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/settings\" activeClassName={s.activeLink}>Settings</NavLink>\r\n        </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/friends\" activeClassName={s.activeLink}>Friends</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n        </nav>\r\n)\r\n}\r\nexport default Navbar;\r\n\r\n","import React from 'react';\r\n\r\nexport const Music= () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\nexport default Music;","import React from 'react';\r\n\r\nexport const Settings= () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\nexport default Settings;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from \"./Header.module.css\"\r\n\r\ntype HeaderPropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n    logOut: () => void\r\n\r\n}\r\n const Header  = (props: HeaderPropsType) => {\r\n    return (\r\n        <header className={s.header}>\r\n        <img src ='https://i1.7fon.org/thumb/z134398.jpg' alt ='label'/>\r\n            <div className={s.loginBlock}>\r\n                { props.isAuth\r\n                    ? <div>{props.login} - <button onClick={props.logOut}>Log out</button></div>\r\n                    : <NavLink to={\"./login\"}>Login</NavLink> }\r\n            </div>\r\n    </header>\r\n    )}\r\nexport default Header;\r\n","import {ACTION_TYPE} from \"./profile-reducer\";\r\nimport {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../api/api\";\r\nimport {AppThunk} from \"./redux_store\";\r\nimport {FormAction, stopSubmit} from \"redux-form\";\r\nimport {GetAuthUserType} from \"../types/types\";\r\n\r\n\r\nexport const initialState = {\r\n    id: '',\r\n    email: null as string|null,\r\n    login: null as string|null,\r\n    isAuth: false,\r\n    error: null,\r\n    capchaUrl: null as string|null,\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport type AuthActionType = SuccesType| FormAction\r\n\r\nexport const authReducer = (state = initialState, action: AuthActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case ACTION_TYPE.GET_USER_DATA_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype SuccesType = {\r\n    type: ACTION_TYPE.GET_USER_DATA_SUCCESS,\r\n    payload: GetAuthUserType\r\n}\r\nexport const succes = (id: string , email: string | null, login: string | null, isAuth: boolean): SuccesType => {  // функции AC\r\n    return {\r\n        type: ACTION_TYPE.GET_USER_DATA_SUCCESS,\r\n        payload: {id, email, login, isAuth,}\r\n    }\r\n}\r\nexport const getAuthUserData = () => {\r\n    return async (dispatch: Dispatch<AuthActionType>) => {\r\n        try {\r\n            const res = await authAPI.me()\r\n            if (res.data.resultCode === 0) {\r\n                let {id, email, login} = res.data.data\r\n                dispatch(succes(id, email, login, true))\r\n            }\r\n        }catch (e){\r\n            throw  Error\r\n        }\r\n\r\n    }\r\n}\r\nexport const login = (email: string, password: string, rememberMe: boolean):AppThunk => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await authAPI.login(email, password, rememberMe,)\r\n            if (res.data.resultCode === 0) {\r\n                dispatch(getAuthUserData())\r\n            } else {\r\n                let message = res.data.messages.length > 0 ? res.data.messages[0] : 'Some error'\r\n                dispatch(stopSubmit(\"login\", {_error: message}))\r\n            }\r\n\r\n        } catch (e) {\r\n            throw  Error\r\n        }\r\n    }\r\n}\r\nexport const logOut = () => async (dispatch: Dispatch<AuthActionType>) => {\r\n    try {\r\n        const res = await authAPI.logOut()\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(succes('', null, null, false))\r\n        }\r\n    }catch (e) {\r\n       throw  Error\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {AppStateType} from \"../../redux/redux_store\";\r\nimport {logOut} from \"../../redux/auth-reducer\";\r\nimport {getIsAuth, getLogin} from '../../redux/select'\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\n\r\nclass HeaderContainer extends React.Component<connectorType> {\r\n\r\n    render() {\r\n        return (\r\n            <Header\r\n                {...this.props}\r\n                isAuth={this.props.isAuth}\r\n                login={this.props.login}/>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        isAuth: getIsAuth(state),\r\n        login: getLogin(state),\r\n    }\r\n}\r\n\r\nconst connector = connect(mapStateToProps,  {logOut})\r\ntype connectorType = ConnectedProps<typeof connector>\r\nexport default connector(HeaderContainer)","import React from 'react';\r\nimport {connect, ConnectedProps, useSelector} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form';\r\nimport {Input} from \"../../assets/FormsControls\";\r\nimport {login} from '../../redux/auth-reducer';\r\nimport {AppStateType} from '../../redux/redux_store';\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport s from '../../assets/FormsControls.module.css'\r\n\r\ntype FormDataType = {\r\n    password: string\r\n    rememberMe: boolean\r\n    email: string\r\n}\r\nconst Login = (props: LoginPropsType) => {\r\n    const isAuth = useSelector<AppStateType, boolean>(state => state.auth.isAuth)\r\n\r\n    const onSubmit = (data: FormDataType,) => {\r\n        props.login(data.password, data.email, data.rememberMe);\r\n    }\r\n    if (isAuth) {\r\n        return <Redirect to={'/profile'}/>;\r\n    }\r\n    return (\r\n        <div>\r\n            <h1><i>{'Login'}</i></h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n};\r\nconst maxLength12 = maxLengthCreator(30)\r\nexport const LoginForm: React.FC<InjectedFormProps<FormDataType>> = props => {\r\n    const {handleSubmit,error } = props\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <i>Login</i>\r\n            <Field\r\n                component={Input}\r\n                name={'password'}\r\n                type='text'\r\n                validate={[required, maxLength12,]}/>\r\n            <i>Password</i>\r\n            <Field\r\n                component={Input}\r\n                name={'email'}\r\n                type=\"password\"\r\n                placeholder={'Password'}\r\n                validate={[required, maxLength12,]}/>\r\n            <i>remember me</i>\r\n            <Field\r\n                component={'input'}\r\n                name={'remember me'}\r\n                type={'checkbox'}\r\n            />\r\n            {error && <div className={s.commonError}>\r\n                {error}\r\n            </div>\r\n            }\r\n\r\n            <button>Login</button>\r\n\r\n        </form>\r\n\r\n    );\r\n}\r\nconst LoginReduxForm = reduxForm\r\n<FormDataType>({\r\n    // a unique name for the form\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\n    const connector = connect(null, {login})\r\n    type LoginPropsType = ConnectedProps <typeof connector>;\r\n        export default connector(Login);\r\n\r\n","import {ACTION_TYPE} from \"./profile-reducer\";\r\nimport {Dispatch} from \"redux\";\r\nimport {usersAPI} from \"../api/api\";\r\nimport {UserType} from \"../types/types\";\r\n\r\nexport type UsersActionType = FollowAT |\r\n    UnFollowAT |\r\n    SetUsersAT |\r\n    SetCurrentPageAT |\r\n    SetTotalUserCountAT |\r\n    ToggleIsFetchingAT |\r\n    ToggleIsFollowingProgressAT\r\n\r\ntype InitialStateType = typeof initialState\r\nexport const initialState = {\r\n    users: [] as UserType[],\r\n    pageSize: 10,   // количество userov на одной странице\r\n    totalUsersCount: 20,  // сколько всего пользователей\r\n    currentPage: 1,   // текущая страница которую просматриваем\r\n    isFetching: false,\r\n    followingInProgress: [] as number[] //id пользователей\r\n}\r\n\r\nexport const usersReducer = (state = initialState, action: UsersActionType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case ACTION_TYPE.FOLLOW_SUCCES:\r\n            return {...state, users: state.users.map(u => u.id === action.userID ? {...u, followed: true} : u)}\r\n\r\n        case ACTION_TYPE.UN_FOLLOW_SUCCESS:\r\n            return {...state, users: state.users.map(u => u.id === action.userID ? {...u, followed: false} : u)}\r\n\r\n        case ACTION_TYPE.SET_USERS:\r\n            return {...state, users: action.users}\r\n\r\n        case ACTION_TYPE.SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage}\r\n\r\n        case ACTION_TYPE.SET_TOTAL_USER_COUNT:\r\n            return {...state, totalUsersCount: action.count}\r\n\r\n        case ACTION_TYPE.TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching}\r\n\r\n        case ACTION_TYPE.TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state, followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId] :\r\n                    state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype FollowAT = {\r\n    type: ACTION_TYPE.FOLLOW_SUCCES\r\n    userID: number\r\n}\r\ntype UnFollowAT = {\r\n    type: ACTION_TYPE.UN_FOLLOW_SUCCESS\r\n    userID: number\r\n}\r\ntype SetUsersAT = {\r\n    type: ACTION_TYPE.SET_USERS\r\n    users: UserType[]\r\n}\r\ntype SetCurrentPageAT = {\r\n    type: ACTION_TYPE.SET_CURRENT_PAGE\r\n    currentPage: number\r\n}\r\n\r\ntype SetTotalUserCountAT = {\r\n    type: ACTION_TYPE.SET_TOTAL_USER_COUNT\r\n    count: number\r\n}\r\n\r\ntype ToggleIsFetchingAT = {\r\n    type: ACTION_TYPE.TOGGLE_IS_FETCHING\r\n    isFetching: boolean\r\n}\r\ntype ToggleIsFollowingProgressAT = {\r\n    type: ACTION_TYPE.TOGGLE_IS_FOLLOWING_PROGRESS\r\n    userId: number\r\n    isFetching: boolean\r\n}\r\nexport const followSucces = (userID: number): FollowAT => {    // функции AC\r\n    return {\r\n        type: ACTION_TYPE.FOLLOW_SUCCES,\r\n        userID: userID,\r\n    } as const\r\n}\r\nexport const unFollowSuccess = (userID: number): UnFollowAT => {  // функции AC\r\n    return {\r\n        type: ACTION_TYPE.UN_FOLLOW_SUCCESS,\r\n        userID: userID\r\n    } as const\r\n}\r\n\r\nexport const setUsers = (users: Array<UserType>): SetUsersAT => {  // функции AC\r\n    return {\r\n        type: ACTION_TYPE.SET_USERS,\r\n        users: users,\r\n    } as const\r\n}\r\nexport const setCurrentPage = (currentPage: number): SetCurrentPageAT => {  // функции AC\r\n    return {\r\n        type: ACTION_TYPE.SET_CURRENT_PAGE,\r\n        currentPage,\r\n    } as const\r\n}\r\nexport const setTotalUserCount = (totalUsersCount: number): SetTotalUserCountAT => {  // функции AC\r\n    return {\r\n        type: ACTION_TYPE.SET_TOTAL_USER_COUNT,\r\n        count: totalUsersCount\r\n    } as const\r\n}\r\nexport const toggleIsFetching = (isFetching: boolean): ToggleIsFetchingAT => {  // функции AC\r\n    return {\r\n        type: ACTION_TYPE.TOGGLE_IS_FETCHING,\r\n        isFetching,\r\n    }\r\n}\r\nexport const toggleIsFollowingProgress = (isFetching: boolean, userId: number): ToggleIsFollowingProgressAT => {\r\n    return {\r\n        type: ACTION_TYPE.TOGGLE_IS_FOLLOWING_PROGRESS,\r\n        isFetching,\r\n        userId,\r\n    } as const\r\n}\r\n\r\nexport const requestUsers = (page: number, pageSize: number) => async (dispatch: Dispatch<UsersActionType>) => {\r\n    dispatch(setCurrentPage(page))\r\n    dispatch(toggleIsFetching(true))\r\n    try {\r\n        const data = await usersAPI.getUsers(page, pageSize)\r\n        dispatch(toggleIsFetching(false))\r\n        dispatch(setUsers(data.items))\r\n        dispatch(setTotalUserCount(data.totalCount))\r\n    } catch (e) {\r\n        throw  Error\r\n    }\r\n}\r\n\r\nconst followUnFollow = async (dispatch: Dispatch<UsersActionType>, userId: number, method: any, actionCreator: Function) => {\r\n    dispatch(toggleIsFollowingProgress(true, userId))\r\n    const response = await method(userId)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleIsFollowingProgress(false, userId))\r\n}\r\nexport const follow = (userId: number) => async (dispatch: Dispatch<UsersActionType>) => {\r\n    followUnFollow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSucces)\r\n}\r\n\r\nexport const unFollow = (userId: number) => async (dispatch: Dispatch<UsersActionType>) => {\r\n    followUnFollow(dispatch, userId, usersAPI.unFollow.bind(usersAPI), unFollowSuccess)\r\n}\r\n\r\n\r\n\r\n","\r\nexport  default {\r\n    // Options.jsx\r\n    items_per_page: '/ page',\r\n    jump_to: 'Go to',\r\n    jump_to_confirm: 'confirm',\r\n    page: '',\r\n\r\n    // Pagination.jsx\r\n    prev_page: 'Previous Page',\r\n    next_page: 'Next Page',\r\n    prev_5: 'Previous 5 Pages',\r\n    next_5: 'Next 5 Pages',\r\n    prev_3: 'Previous 3 Pages',\r\n    next_3: 'Next 3 Pages',\r\n}\r\n","import React from \"react\";\r\nimport Pagination from \"rc-pagination\";\r\nimport localeInfo from '../../locale/en_US';\r\n\r\ntype PropsType = {\r\n    currentPage: number\r\n    totalUsersCount: number\r\n    onPageHandler:(pageNumber: number) => void\r\n    pageSize: number\r\n\r\n}\r\nexport const Paginator: React.FC <PropsType> = props=> {\r\n    const {currentPage,totalUsersCount,onPageHandler, pageSize }=props\r\n        return(\r\n    <div className={\"pagination\"}>\r\n        <Pagination className=\"ant-pagination\"\r\n                    showTitle={true}\r\n                    defaultCurrent={currentPage}\r\n                    total={totalUsersCount}\r\n                    onChange={(e) => onPageHandler(e)}\r\n                    defaultPageSize={pageSize}\r\n                    pageSize={pageSize}\r\n                    locale={localeInfo}/>\r\n    </div>)\r\n}","import React from 'react';\r\nimport s from \"./user.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport avatar from \"../../assets/image/avatar.png\";\r\nimport {UserType} from \"../../types/types\";\r\nimport style from '../../assets/common/common.module.css'\r\n\r\ntype PropsType = {\r\n    user: UserType\r\n    followingInProgress: number[]\r\n    follow: (userID: number) => void\r\n    unFollow: (userID: number) => void\r\n}\r\nexport const EveryUser = (props: PropsType) => {\r\n    const {user, followingInProgress, follow, unFollow,} = props\r\n\r\n    return (\r\n        <div key={user.id}\r\n             className={s.user}>\r\n            <div className={s.common}>\r\n                <NavLink className={s.photo} to={'./profile/' + user.id}>\r\n                    <img src={user.photos.small ? user.photos.small : avatar}\r\n                    alt={'photos'}/>\r\n                </NavLink>\r\n\r\n                <div className={s.followAndDescription}>\r\n                    <div className={s.left}>\r\n                        {user.followed ?\r\n                            <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                    onClick={() => {\r\n                                        unFollow(user.id);\r\n                                    }} className={style.commonBtn}>UnFollow\r\n                            </button>\r\n                            :\r\n                            <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                    onClick={() => {\r\n                                        follow(user.id)\r\n                                    }} className={style.commonBtn}>Follow\r\n                            </button>\r\n                        }\r\n\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </div>\r\n                    <div className={s.right}>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n","import React from \"react\";\nimport s from \"./user.module.css\"\nimport {UsersType} from \"../../types/types\";\nimport {Paginator} from \"../../assets/common/Paginator\";\nimport {EveryUser} from \"./EveryUser\";\n\nexport let Users: React.FC<UsersType> = props => {\n    return (\n        <>\n            <Paginator\n                onPageHandler={props.onPageHandler}\n                pageSize={props.pageSize}\n                totalUsersCount={props.totalUsersCount}\n                currentPage={props.currentPage}\n            />\n            <div className={s.users}>\n                {\n                    props.users.map(u => <EveryUser\n                        key={u.id}\n                        user={u}\n                        follow={props.follow}\n                        unFollow={props.unFollow}\n                        followingInProgress={props.followingInProgress}/>)\n                }\n            </div>\n        </>\n\n    )\n}\n\n\n\n\n\n\n\n\n\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {follow, requestUsers, setCurrentPage, toggleIsFollowingProgress, unFollow,} from \"../../redux/users-reducer\";\r\nimport {AppStateType} from \"../../redux/redux_store\";\r\nimport Preloader from \"../preloader/preloader\";\r\nimport {compose} from \"redux\";\r\nimport {Users} from \"./Users\";\r\nimport {UserType} from '../../types/types';\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from '../../redux/select';\r\n\r\nclass UsersContainer extends React.Component<UsersPropsType> {\r\n\r\n    componentDidMount() {\r\n        const {currentPage,pageSize } = this.props\r\n        this.props.requestUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageHandler = (pageNumber: number) => {\r\n        const {pageSize} = this.props\r\n        this.props.requestUsers(pageNumber, pageSize)\r\n    }\r\n\r\n    render() {\r\n        const {isFetching}=this.props;\r\n        return (\r\n            <>    {isFetching ? <Preloader/> : null}\r\n                <Users\r\n                    totalUsersCount={this.props.totalUsersCount}\r\n                    pageSize={this.props.pageSize}\r\n                    currentPage={this.props.currentPage}\r\n                    unFollow={this.props.unFollow}\r\n                    follow={this.props.follow}\r\n                    users={this.props.users}\r\n                    onPageHandler={this.onPageHandler}\r\n                    followingInProgress={this.props.followingInProgress}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport type UsersPropsType = MapDispatchToPropsType & MapStateToPropsType\r\n\r\nexport type MapStateToPropsType = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: number[]\r\n}\r\nexport type MapDispatchToPropsType = {\r\n    follow: (userID: number) => void,\r\n    unFollow: (userID: number) => void,\r\n    setCurrentPage: (currentPage: number) => void\r\n    requestUsers: (currentPage: number, pageSize: number) => void\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {\r\n        follow,      // подразумевает follow: follow, где второе follow - это санки\r\n        unFollow,\r\n        setCurrentPage,\r\n        toggleIsFollowingProgress,\r\n        requestUsers: requestUsers\r\n    }),\r\n)(UsersContainer)\r\n\r\n\r\n\r\n","\r\nexport type initialStateType = {\r\n    messageForState: messageForStateType[]\r\n}\r\nexport type messageForStateType = {\r\n    id: number\r\n    message: string\r\n}\r\nconst initialState = {\r\n    messageForState:[\r\n        {id: 1, message: \"hello\"},\r\n        {id: 2, message: \"hi\"},\r\n    ]\r\n}\r\ntype actionType = {\r\n    type: \"ADD_MESSAGE\"\r\n    messageForm: string\r\n}\r\nexport const NewReducer = (state = initialState, action: actionType): initialStateType => {\r\n    switch (action.type) {\r\n        case \"ADD_MESSAGE\":\r\n            const newMessage = {\r\n                id: new Date().getTime(),\r\n                message: action.messageForm,\r\n            }\r\n            return {\r\n                ...state, messageForState: [newMessage, ...state.messageForState]\r\n            }\r\n\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\nexport const addNewMessageForm = (messageForm: string): actionType => {\r\n    return (\r\n        {\r\n            type: \"ADD_MESSAGE\",\r\n            messageForm\r\n        }\r\n    ) as const\r\n}\r\n","import {useDispatch, useSelector} from 'react-redux';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {AppStateType} from '../../redux/redux_store';\r\nimport {addNewMessageForm} from './new-reducer';\r\n\r\n\r\nconst NewForm = () => {\r\n    const dispatch = useDispatch()\r\n    const selector = useSelector((state: AppStateType) => state.new.messageForState)\r\n\r\n\r\n    let addMessageForm = (values: any) => {\r\n        dispatch(addNewMessageForm(values.inputform))\r\n    }\r\n    return (\r\n        <div>\r\n            {selector.map(s => {\r\n                return <div key={s.id}>{s.message}</div>\r\n            })}\r\n            <NewReduxForm onSubmit={addMessageForm}/>\r\n        </div>)\r\n}\r\nconst NewComponentForm = (props: any) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field\r\n                component=\"input\"\r\n                name=\"inputform\"\r\n            />\r\n            <button>Add New</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst NewReduxForm = reduxForm({form: 'newForm'})(NewComponentForm)\r\nexport default NewForm;","import {getAuthUserData} from \"./auth-reducer\"\r\nimport {ACTION_TYPE} from \"./profile-reducer\"\r\nimport {AppThunk} from \"./redux_store\"\r\n\r\ntype InitialStateType = typeof initialState\r\nconst initialState = {\r\n    inicialized: false\r\n}\r\nexport const appReducer = (state: InitialStateType = initialState, action: AppActionsReducerType): InitialStateType => {\r\n    switch (action.type) {\r\n        case ACTION_TYPE.INITIALIZED_SUCCESS:\r\n            return {...state, inicialized: true}\r\n        default:\r\n            return state\r\n    }\r\n}\r\ntype InicializedAT = ReturnType<typeof inicializedAC>\r\nexport type AppActionsReducerType = InicializedAT\r\n\r\nexport const inicializedAC = () => {\r\n    return {\r\n        type: ACTION_TYPE.INITIALIZED_SUCCESS,\r\n    }\r\n}\r\n\r\nexport const inicializedApp = (): AppThunk => dispatch => {\r\n    let promise = dispatch(getAuthUserData())\r\n    promise.then(() => {\r\n        dispatch(inicializedAC())\r\n    })\r\n}\r\n\r\n","import React, {ComponentType} from 'react';\r\nimport Preloader from \"../components/preloader/preloader\";\r\n\r\nexport function WithSuspense<T>(Component: ComponentType<T>) {\r\n    return (props: any) => {\r\n        return <React.Suspense fallback={<Preloader/>}>\r\n            <Component {...props as T}/>\r\n        </React.Suspense>\r\n    }\r\n}\r\n\r\n","import React from 'react';\nimport './App.css';\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Music\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport NewForm from './components/New/New';\nimport {AppStateType} from './redux/redux_store';\nimport Preloader from './components/preloader/preloader';\nimport {inicializedApp} from './redux/app-reducer'\nimport {Route} from 'react-router';\nimport {connect, ConnectedProps} from 'react-redux';\nimport {WithSuspense} from \"./hoc/WithSuspense\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\n\nclass App extends React.Component<ConectedType> {\n    componentDidMount() {\n        this.props.inicializedApp()\n    }\n\n    render() {\n        if (!this.props.inicialized) {\n            return <Preloader/>\n        }\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className=\"app-wrapper-content\">\n                    <Route path=\"/profile/:userId?\" render={WithSuspense(ProfileContainer)}/>\n                    <Route path=\"/dialogs\"\n                           render={WithSuspense(DialogsContainer)}/>\n                    <Route path=\"/users\" render={() =>\n                        <UsersContainer/>}/>\n\n                    <Route path=\"/new\" render={() => <NewForm/>}/>\n                    <Route path=\"/music\" component={Music}/>\n                    <Route path=\"/settings\" component={Settings}/>\n                    <Route path=\"/friends\" render={() => <div>f</div>}/>\n                    <Route path=\"/login\" component={Login}/>\n                </div>\n            </div>)\n    }\n}\n\nconst mapStateToProps = (state: AppStateType) => {\n    return {\n        inicialized: state.app.inicialized,\n    }\n}\nlet connector = connect(mapStateToProps, {inicializedApp})\ntype ConectedType = ConnectedProps<typeof connector>\nexport default connector(App)\n\n\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport {ProfileActionType, profileReducer} from \"./profile-reducer\";\r\nimport {DialogActionType, dialogsReducer} from \"./dialogs-reducer\";\r\nimport {UsersActionType, usersReducer} from \"./users-reducer\";\r\nimport {AuthActionType, authReducer} from \"./auth-reducer\";\r\nimport thunkMiddleWare, {ThunkAction} from \"redux-thunk\"\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport {NewReducer} from \"../components/New/new-reducer\";\r\nimport {AppActionsReducerType, appReducer} from \"./app-reducer\";\r\n\r\n/*export type ActionsType =\r\n    ReturnType<typeof addPostAC> |\r\n    ReturnType<typeof changeTextareaAC> |\r\n    ReturnType<typeof upDateNewMessageTextAC> |\r\n    ReturnType<typeof sendMessageAC>*/\r\n\r\n\r\n\r\nlet rootReducer = combineReducers({              //rootReducer возвращает state\r\n    profilePage: profileReducer,  //это наш целый стэйт\r\n    dialogsPage: dialogsReducer,  // ключ: значение\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    new: NewReducer,\r\n    app: appReducer,\r\n})\r\n\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>   //  ReturnType -> дай мне  возвращаемый тип rootReducera\r\n\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType,\r\n    AppStateType,\r\n    unknown,\r\n    AppActionsType>\r\n\r\nexport type AppActionsType =\r\n    AppActionsReducerType | AuthActionType |\r\n    DialogActionType | ProfileActionType |\r\n    UsersActionType\r\n\r\n//@ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose   //подключили redux vtool\r\nexport let store = createStore(rootReducer,composeEnhancers( applyMiddleware(thunkMiddleWare)))\r\n//@ts-ignore\r\nwindow.store = store\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {store} from './redux/redux_store';\n\nconsole.log(React.version);\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"user_users__2App8\",\"common\":\"user_common__2UQBs\",\"photo\":\"user_photo__4u11O\",\"left\":\"user_left__1WqlW\",\"right\":\"user_right__3Ez0v\",\"followAndDescription\":\"user_followAndDescription__3N32K\",\"selected\":\"user_selected__1aSrd\"};","export default __webpack_public_path__ + \"static/media/prelo.d7190a4c.webp\";","import React from 'react';\r\nimport prelo from '../../assets/image/prelo.webp'\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div>\r\n            <img src={prelo} style={{width: \"300px\"}} alt={'preloader'}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","\r\nexport const required = (value: string) => {\r\n    if(value) return undefined\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number) => {\r\n    return (value: string) => {\r\n        if (value.length > maxLength ) return `max length with ${maxLength} symbols`\r\n        return undefined\r\n\r\n    }}\r\n\r\n","import React from 'react';\r\nimport s from './FormsControls.module.css'\r\n\r\nexport const Input = (props: any) => {\r\n    const {input, meta} = props\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n                <input {...input}/>\r\n                {hasError && <span className={`${s.formControl} ${s.error}`}>{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport const Textarea = (props: any) => {\r\n    const {input, meta} = props\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n                <textarea {...input}{...props}/>\r\n                {hasError && <span className={`${s.formControl} ${s.error}`}>{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3R7w-\",\"loginBlock\":\"Header_loginBlock__30zcL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"commonBtn\":\"common_commonBtn__3Wss5\"};"],"sourceRoot":""}